#BlueJ class context
comment0.target=Roboter
comment0.text=\n\ Diese\ Klasse\ ist\ die\ Oberklasse\ fuer\ die\ Roboter\ "Robita",\ "Robson"\ und\ "Robby".\ \n\ Programme\ sollen\ nur\ in\ den\ Unterklassen\ \n\ implementiert\ werden,\ da\ diese\ Klasse\ fuer\ Java-Beginner\ sehr\ komplex\ ist.\n\ Ein\ Roboter\ kann\ sich\ felderweise\ in\ die\ vier\ Himmelsrichtungen\ im\ Szenario\ bewegen.\ \n\ Ueber\ Sensoren\ kann\ er\ Informationen\ ueber\ seine\ Umwelt\ erhalten.\n
comment1.params=
comment1.target=Roboter()
comment1.text=\n\ Ein\ Objekt\ der\ Klasse\ Roboter\ wird\ exempliert\ bzw.\ instanziert.\n
comment10.params=
comment10.target=void\ dreheRechts()
comment10.text=\n\ Der\ Roboter\ dreht\ sich\ um\ 90\ Grad\ nach\ rechts\ (aus\ der\ Sicht\ des\ Roboters).\n
comment11.params=
comment11.target=void\ dreheUm()
comment11.text=\n\ Der\ Roboter\ dreht\ sich\ um\ 180\ Grad\ nach\ rechts\ (aus\ der\ Sicht\ des\ Roboters).\n
comment12.params=
comment12.target=void\ dreheLinks()
comment12.text=\n\ Der\ Roboter\ dreht\ sich\ um\ 90\ Grad\ nach\ links\ (aus\ der\ Sicht\ des\ Roboters).\n
comment13.params=name
comment13.target=Gegenstand\ getInventar(java.lang.String)
comment13.text=\n\ Gibt\ das\ erste\ Gegenstandsobjekt\ zur\u00FCck,\ das\ der\ angegebenen\ Art\ entspricht.\n\ @param\ name\ Art\ des\ gesuchten\ Gegenstands\n\ @return\ Gegenstandsobjekt\n
comment14.params=name
comment14.target=boolean\ hatGegenstand(java.lang.String)
comment14.text=\n\ Gibt\ zurueck,\ ob\ der\ Roboter\ mindestens\ einen\ Gegenstand\ der\ angegeben\ Art\ besitzt.\n\ @param\ name\ Art\ des\ gesuchten\ Gegenstands\n\ @return\ true,\ wenn\ der\ Roboter\ einen\ derartigen\ Gegenstand\ hat,\ sonst\ false\n
comment15.params=name\ anzahl
comment15.target=void\ setAnzahlVonGegenstand(java.lang.String,\ int)
comment15.text=\n\ Gibt\ dem\ Roboter\ eine\ bestimmte\ Anzahl\ von\ Gegenstaenden\ einer\ Art\n\ @param\ name\ Art\ des\ Gegenstands\n\ @anzahl\ gewuenschte\ Anzahl\n
comment16.params=name
comment16.target=void\ benutze(java.lang.String)
comment16.text=\n\ Benutzt\ den\ angegebenen\ Gegenstand.\ Es\ koennen\ nur\ Schluessel,\ Schalter,\ Bombe,\ Feuerloescher\ und\ Akku\ benutzt\ werden.\n\ Dabei\ kann\ ein\ Schluessel\ nur\ direkt\ vor\ einem\ Schloss\ benutzt\ werden.\ Eine\ Bombe\ sprengt\ einen\ Bereich\ frei.\ Der\ Feuerloescher\ \n\ kann\ ein\ direkt\ vor\ dem\ Roboter\ befindliches\ Feuer\ loeschen.\ Der\ Akku\ erhoeht\ die\ Restenergie\ des\ Roboters.\n\ @param\ name\ Art\ des\ zu\ benutzenden\ Gegenstands\ ("Schluessel",\ "Schalter",\ "Bombe",\ "Feuerloescher",\ "Akku")\n
comment17.params=
comment17.target=boolean\ istAufGegenstand()
comment17.text=\n\ Liefert\ genau\ dann\ true,\ wenn\ auf\ der\ Kachel,\ auf\ der\ sich\ der\n\ aufgerufene\ Roboter\ gerade\ befindet,\ ein\ beliebiger\ Gegenstand\ befindet.\n\ @return\ true,\ wenn\ der\ Roboter\ auf\ einem\ Gegenstand\ steht,\ sonst\ false\n
comment18.params=name
comment18.target=boolean\ istAufGegenstand(java.lang.String)
comment18.text=\n\ Liefert\ genau\ dann\ true,\ wenn\ auf\ der\ Kachel,\ auf\ der\ sich\ der\n\ aufgerufene\ Roboter\ gerade\ befindet,\ ein\ Gegenstand\ mit\ dem\ angegebnen\ Namen\ befindet.\n\ @param\ name\ Einer\ der\ Gegenstaende\ ("Schluessel",\ "Schalter",\ "Bombe",\ "Feuerloescher",\ "Akku",\ "Schraube",\ "Kontaktplatte",\ "Oelfleck",\ "Portal",\ "Strom",\ "Feuer")\n\ @return\ true,\ wenn\ der\ Roboter\ auf\ einem\ Gegenstand\ steht,\ sonst\ false\n
comment19.params=
comment19.target=Gegenstand\ gibGegenstandUnterRoboter()
comment19.text=\n\ Gibt\ den\ Gegenstand\ zurueck,\ auf\ dem\ sich\ ein\ Roboter\ befindet\ \n\ @return\ Gegenstand\ (entweder\ "Schluessel",\ "Schalter",\ "Bombe",\ "Feuerloescher",\ "Akku",\ "Schraube",\ "Kontaktplatte",\ "Oelfleck",\ "Portal",\ "Strom",\ "Feuer")\n
comment2.params=
comment2.target=int\ getAnzahl()
comment2.text=\n\ Gibt\ die\ Anzahl\ der\ Gegenstaende,\ die\ Roboter\ traegt,\ zurueck.\n\ @return\ Anzahl\ der\ Gegenstaende\n
comment20.params=
comment20.target=boolean\ istInventarLeer()
comment20.text=\n\ Liefert\ genau\ dann\ true,\ wenn\ der\ aufgerufene\ Roboter\ keinen\ Gegenstand\ bei\ sich\ hat.\n\ @return\ true,\ wenn\ der\ Roboter\ keinen\ Gegenstand\ mit\ sich\ traegt,\ sonst\ false\n
comment21.params=name
comment21.target=void\ ablegen(java.lang.String)
comment21.text=\n\ Der\ Roboter\ legt\ einen\ Gegenstand\ aus\ seinem\ Vorrat\ auf\ dem\ Feld\ ab.\n\ @param\ name\ Einer\ der\ Gegenstaende\ ("Schluessel",\ "Schalter",\ "Bombe",\ "Feuerloescher",\ "Akku",\ "Schraube",\ "Kontaktplatte",\ "Oelfleck",\ "Portal",\ "Strom",\ "Feuer")\n
comment22.params=
comment22.target=void\ aufnehmen()
comment22.text=\n\ Der\ Roboter\ nimmt\ einen\ Gegenstand,\ der\ sich\ auf\ seinem\ Feld\ befindet\ in\ seinen\ Vorrat\ auf.\n\ Falls\ er\ nicht\ auf\ einem\ Gegenstand\ steht,\ gibt\ er\ eine\ Warnung\ aus.\n\ Roboter\ haben\ nur\ eine\ begrenzte\ Kapazitaet.\ Sie\ koennen\ maximal\ 99\ Gegenstaende\ mit\ sich\ tragen.\n\ Falls\ er\ einen\ 100.\ Gegenstand\ aufnehmen\ moechte,\ wird\ auch\ eine\ entsprechende\ Warnung\ ausgegeben.\n
comment23.params=r
comment23.target=void\ gehilfeEinsetzen(Roboter)
comment23.text=\n\ Diese\ Methode\ setzt\ einen\ Roboter\ vor\ den\ Roboter,\ der\ diese\ Methode\ aufruft.\n\ Ist\ vor\ ihm\ kein\ Platz,\ wird\ eine\ Warnung\ ausgegeben.\n\ @param\ r\ der\ Hilfsroboter,\ der\ eingesetzt\ werden\ soll\n
comment24.params=
comment24.target=boolean\ istVorneFrei()
comment24.text=\n\ Der\ Sensor\ ueberprueft,\ ob\ vor\ dem\ Roboter\ Hindernisse\ stehen\ oder\ nicht\n\ @return\ true,\ wenn\ vor\ dem\ Roboter\ frei\ ist,\ sonst\ false\n
comment25.params=name
comment25.target=boolean\ istVorne(java.lang.String)
comment25.text=\n\ Liefert\ genau\ dann\ true,\ wenn\ sich\ vor\ dem\ Roboter\ ein\ Gegenstand\ mit\ dem\ angegebnen\ Namen\ befindet.\n\ @param\ name\ Einer\ der\ Gegenstaende\ ("Schluessel",\ "Schalter",\ "Bombe",\ "Feuerloescher",\ "Akku",\ "Schraube",\ "Kontaktplatte",\ "Oelfleck",\ "Portal",\ "Strom",\ "Feuer")\n\ @return\ true,\ wenn\ der\ Roboter\ vor\ dem\ Gegenstand\ mit\ dem\ Namen\ name\ steht,\ sonst\ false\n
comment26.params=
comment26.target=boolean\ istWandVorne()
comment26.text=\n\ Der\ Sensor\ ueberprueft,\ ob\ sich\ in\ Laufrichtung\ des\ Roboters\ eine\ Wand\ befindet.\n\ @return\ true,\ wenn\ der\ Roboter\ vor\ einer\ Wand\ steht,\ sonst\ false\n
comment27.params=
comment27.target=boolean\ istWandRechts()
comment27.text=\n\ Der\ Sensor\ ueberprueft,\ ob\ sich\ rechts\ der\ Laufrichtung\ eine\ Wand\ befindet.\n\ @return\ true,\ wenn\ sich\ rechts\ von\ dem\ Roboter\ eine\ Wand\ befindet,\ sonst\ false\n
comment28.params=
comment28.target=boolean\ istWandLinks()
comment28.text=\n\ Der\ Sensor\ ueberprueft,\ ob\ sich\ links\ der\ Laufrichtung\ eine\ Wand\ befindet.\n\ @return\ true,\ wenn\ sich\ links\ von\ dem\ Roboter\ eine\ Wand\ befindet,\ sonst\ false\n
comment29.params=
comment29.target=void\ zeichneRobotImage()
comment29.text=\n\ Eine\ private\ Methode,\ die\ dafuer\ sorgt,\ dass\ der\ "Aufdruck"\ auf\ dem\ Roboter\ (Anzahl\ der\ Gegenstaende),\ der\ Akkustandsbalken\ und\n\ der\ Richtungspfeil\ aktualisiert\ werden\n
comment3.params=name
comment3.target=int\ getAnzahl(java.lang.String)
comment3.text=\n\ Gibt\ die\ Anzahl\ der\ Gegenstaende\ einer\ bestimmten\ Art\ zurueck.\n\ @param\ name\ Art\ der\ Gegenstands\ (z.B.\ "Schluessel")\n\ @return\ Anzahl\ der\ Gegenstaende\n
comment30.params=
comment30.target=void\ zeichneEnergie()
comment30.text=\n\ Zeichne\ /\ Aktualisiere\ die\ Energie\ (Akkustandsbalken),\ die\ der\ Roboter\ hat\n
comment31.params=text\ istWichtig
comment31.target=void\ melde(java.lang.String,\ boolean)
comment31.text=\n\ Gibt\ den\ uebergebenen\ String\ in\ einer\ Dialogbox\ auf\ dem\ Bildschirm\ aus\n\ @param\ text\ Der\ Text,\ der\ angezeit\ werden\ soll\n\ @param\ istWichtig\ bei\ true\ wird\ der\ Text\ "Achtung\!\ Besonders\ wichtige\ Meldung\:"\ in\ die\ Kopfzeile\ geschrieben,\ sonst\ nur\ der\ Text\ "Meldung\!"\n
comment32.params=text\ z
comment32.target=void\ melde(java.lang.String,\ int)
comment32.text=\n\ Gibt\ den\ uebergebenen\ String\ und\ eine\ Zahl\ in\ einer\ Dialogbox\ auf\ dem\ Bildschirm\ aus\n\ @param\ text\ Der\ Text,\ der\ angezeit\ werden\ soll\n\ @param\ z\ eine\ Zahl,\ die\ hinter\ dem\ Text\ text\ ausgegeben\ wird\n
comment33.params=text\ actor
comment33.target=void\ warne(java.lang.String,\ greenfoot.Actor)
comment33.text=\n\ Gibt\ den\ uebergebenen\ String\ in\ einer\ Dialogbox\ als\ Warnung\ auf\ dem\ Bildschirm\ aus.\n\ Damit\ man\ Endlosschleifen\ unterbrechen\ kann,\ kann\ man\ auf\ die\ Frage\ "Soll\ dennoch\ weiter\ gemacht\ werden?"\n\ mit\ Nein\ antworten.\ Dadurch\ wird\ der\ uebergebene\ Actor\ actor\ von\ der\ Roboterwelt\ entfernt\ und\ diese\ neu\ gezeichnet.\n\ @param\ text\ Der\ Text,\ der\ angezeit\ werden\ soll\n\ @param\ actor\ Der\ Actor,\ der\ ggf.\ entfernt\ werden\ soll\n
comment34.params=world
comment34.target=void\ addedToWorld(greenfoot.World)
comment34.text=\n\ Wird\ aufgerufen,\ wenn\ der\ Roboter\ in\ die\ Welt\ gesetzt\ wird;\ \n\ erweitert\ nach\ Vorschlag\ P.Henriksen\ 29.6.08\n\ @param\ world\ Die\ Welt\ in\ die\ ein\ Roboter\ gesetzt\ wurde\n
comment35.params=x\ y
comment35.target=void\ setLocation(int,\ int)
comment35.text=\n\ setLocation(x,y)\ fuer\ Roboter\ wird\ ueberschrieben,\ um\ nicht\ auf\ Wand\ oder\n\ anderen\ Roboter\ ziehen\ zu\ koennen\!\n\ --\ setzt\ den\ Roboter\ auf\ eine\ Kachel,\ deren\ Spalte\ x\ sowie\ Reihe\ y\ du\ \n\ hier\ vorgibst.\ Die\ Nummerierung\ beginnt\ jeweils\ bei\ 0\ \!\!)\ \n\ @param\ x\ die\ x-Koordinate\n\ @param\ y\ die\ y-Koordinate\n
comment36.params=x
comment36.target=void\ setRotation(int)
comment36.text=\n\ setRotation(x)\ fuer\ Roboter\ wird\ ueberschrieben,\ damit\ nur\ vier\ Rotationsrichtungen\ moeglich\ sind\!\n\ @param\ x\ die\ Richtung\ (0\=Osten,\ 90\=Norden,\ 180\=Westen,\ 270\=Sueden)\n
comment4.params=
comment4.target=int\ getEnergie()
comment4.text=\n\ Gibt\ die\ Restenergie\ des\ Roboters\ zur\u00FCck\n\ @return\ Energiereserve\ (0-100)\n
comment5.params=verlust
comment5.target=void\ verbraucheEnergie(int)
comment5.text=\n\ Reduziert\ die\ Restenergie\ des\ Roboters\ um\ den\ angegebenen\ Wert.\n\ @param\ verlust\ Anzahl\ der\ verbrauchten\ Energiepunkte\n
comment6.params=
comment6.target=boolean\ istEnergieLeer()
comment6.text=\n\ Gibt\ zurueck,\ ob\ die\ Energie\ des\ Roboters\ verbraucht\ ist.\n\ @return\ true,\ wenn\ Restenergie\ \=0,\ sonst\ false\n
comment7.params=
comment7.target=int\ xVor()
comment7.text=\n\ Gibt\ die\ x-Koordinate\ zur\u00FCck,\ wenn\ der\ Roboter\ einen\ Schritt\ nach\ vorne\ macht.\n\ @return\ x-Koordinate\n
comment8.params=
comment8.target=int\ yVor()
comment8.text=\n\ Gibt\ die\ y-Koordinate\ zur\u00FCck,\ wenn\ der\ Roboter\ einen\ Schritt\ nach\ vorne\ macht.\n\ @return\ y-Koordinate\n
comment9.params=
comment9.target=void\ einsVor()
comment9.text=\n\ Der\ Roboter\ geht\ einen\ Schritt\ in\ die\ Pfeilrichtung.\n\ Das\ macht\ er\ nur,\ wenn\ sich\ keine\ Wand\ vor\ ihm\ befindet\ oder\n\ er\ nicht\ an\ der\ Grenze\ der\ Welt\ zur\ Wand\ blickt.\n
numComments=37
